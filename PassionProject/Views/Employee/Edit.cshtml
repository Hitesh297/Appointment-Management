@model PassionProject.Models.EmployeeVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<h4>Employee</h4>
<hr />
<div class="page-cont">
    <div id="form-section">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                @*@Html.HiddenFor(model => model.Employee.EmployeeId)*@
                <input type="hidden" name="EmployeeId" value="@Model.Employee.EmployeeId" />
                <input type="hidden" name="EmployeeHasPic" value="@Model.Employee.EmployeeHasPic.ToString()" />
                <input type="hidden" name="PicExtension" value="@Model.Employee.PicExtension" />
                <div class="form-group">
                    @{
                        string imageurl = "/Content/Images/Employees/default.jpg";
                        if (Model.Employee.EmployeeHasPic)
                        {
                            imageurl = "/Content/Images/Employees/" + Model.Employee.EmployeeId + "." + Model.Employee.PicExtension;
                        }
                    }
                    <div class="col-md-4"><img id="profile-pic" style="display:block; max-width:150px; padding-bottom:5px;" alt="@Model.Employee.Fname" src="@imageurl" /></div>

                </div>
                <div class="form-group">
                    <input class="col-md-4" id="imgInput" type="file" name="EmployeePic" />
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                        </div>*@
                    <label class="control-label col-md-2">First Name:</label>
                    <div class="col-md-10">
                        <input class="form-control" type="text" name="Fname" value="@Model.Employee.Fname" />
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                        </div>*@
                    <label class="control-label col-md-2">Last Name:</label>
                    <div class="col-md-10">
                        <input class="form-control" type="text" name="Lname" value="@Model.Employee.Lname" />
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
                        </div>*@
                    <label class="control-label col-md-2">Date of Joining:</label>
                    <div class="col-md-10">
                        <input class="form-control" type="date" name="DOJ" value="@Model.Employee.DOJ.ToString("yyyy-MM-dd")" />
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                        </div>*@
                    <label class="control-label col-md-2">Bio:</label>
                    <div class="col-md-10">
                        <textarea class="form-control" rows="4" cols="35" type="text" name="Bio">@Model.Employee.Bio</textarea>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div id="service-section">
        <label>Skills</label>
        <div id="skill-container">
            @if (Model.ServicesAssigned == null || Model.ServicesAssigned.Count() == 0)
            {
                <span>No Skills Assigned.</span>
            }
            <ul>
                @foreach (var service in Model.ServicesAssigned)
                {
                    <li><a href="/Service/Details/@service.ServiceId">@service.Name</a> <a style="color:#ab2020;" href="/Employee/UnassociateService?id=@Model.Employee.EmployeeId&serviceId=@service.ServiceId">[x]</a></li>

                }
            </ul>
        </div>

        <form id="associate-form" method="POST" action="/Employee/AssociateService/@Model.Employee.EmployeeId">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label col-md-3">Add Skill:</label>
                    <div class="col-md-9">
                        <select class="form-control" name="serviceId">
                            @foreach (var service in Model.ServicesAvailable)
                            {
                                <option value="@service.ServiceId">@service.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-10">
                        @*<button>Add Skill</button>*@
                        <input type="submit" value="Add Skill" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
